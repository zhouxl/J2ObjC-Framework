//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/antoniocortes/j2objcprj/relases/j2objc/guava/build_result/java/com/google/errorprone/annotations/IncompatibleModifiers.java
//

#include "../../../../../J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsIncompatibleModifiers")
#ifdef RESTRICT_ComGoogleErrorproneAnnotationsIncompatibleModifiers
#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsIncompatibleModifiers 0
#else
#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsIncompatibleModifiers 1
#endif
#undef RESTRICT_ComGoogleErrorproneAnnotationsIncompatibleModifiers

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleErrorproneAnnotationsIncompatibleModifiers_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsIncompatibleModifiers || defined(INCLUDE_ComGoogleErrorproneAnnotationsIncompatibleModifiers))
#define ComGoogleErrorproneAnnotationsIncompatibleModifiers_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "../../../../../java/lang/annotation/Annotation.h"

/*!
 @brief Annotation declaring that the target annotation is incompatible with any one of the provided
  modifiers.For example, an annotation declared as: 
 @code

  @@IncompatibleModifiers(Modifier.PUBLIC)
  @@interface MyAnnotation {} 
  
@endcode
  
 <p>will be considered illegal when used as: 
 @code

  @@MyAnnotation public void foo() {} 
  
@endcode
 @author benyu@@google.com (Jige Yu)
 */
@protocol ComGoogleErrorproneAnnotationsIncompatibleModifiers < JavaLangAnnotationAnnotation >

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsIncompatibleModifiers)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsIncompatibleModifiers)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsIncompatibleModifiers")
